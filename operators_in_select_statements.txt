1)  Write out a generic SELECT statement.
A: select * from gifts

2)  Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
A: "Song for women". Select, from, where (SFW).

3)  Given this dogs table, write queries to select the following pieces of data:
    CREATE TABLE dogs (
        "id"          INTEGER, 
        "name"        VARCHAR(25),
        "gender"      VARCHAR(1),
        "age"         INTEGER,
        "weight"      INTEGER,
        "breed"       TEXT,
        "intake_date" DATE,
        "in_foster"   DATE
        );

        INSERT INTO dogs
        ("id",  "name",      "gender", "age", "weight", "breed",              "intake_date", "in_foster")
        VALUES
        (10001, 'Boujee',    'F',       3,     36,      'labrador poodle',    '2017-06-22',   null),
        (10002, 'Munchkin',  'F',       0,     8,       'dachsund chihuahua', '2017-01-13',  '2017-01-31'),
        (10004, 'Marley',    'M',       0,     10,      'labrador',           '2017-05-04',  '2016-06-20'),
        (10003, 'Lassie',    'F',       7,     17,      'collie shepherd',    '2016-07-05',  '2017-07-22'),
        (10006, 'Marmaduke', 'M',       7,     150,     'great dane',         '2016-03-22',  '2016-05-15'),
        (10007, 'Rosco',     'M',       5,     180,     'rottweiler',         '2017-04-01',   null);

    Display the name, gender, and age of all dogs that are part Labrador.
    A:  select name, gender, age 
        from dogs 
        where breed like '%labrador%';

    Display the ids of all dogs that are under 1 year old.
    A:  select id
        from dogs
        where age < 1; 
    
    Display the name and age of all dogs that are female and over 35lbs.
    A:  select name, age
        from dogs
        where gender='F'
        and weight > 35;
    
    Display all of the information about all dogs that are not Shepherd mixes.
    A:  select *
        from dogs
        where breed not like '%shepherd%';
    
    Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
    A:  select id, age, weight, breed
        from dogs
        where weight > 60
        or breed like '%great dane%'

4)  Given this cats table, what records are returned from these queries?
        CREATE TABLE cats(
            "id"            INTEGER,
            "name"          VARCHAR(16),
            "gender"        VARCHAR(1),
            "age"           INTEGER,
            "intake_date"   DATE,
            "adoption_date" DATE
            );
            
        INSERT INTO cats
            ("id", "name",   "gender", "age", "intake_date", "adoption_date")
        VALUES
            ( 1, 'Mushi',    'M',       1,    '2016-01-09',  '2016-03-22'),
            ( 2, 'Seashell', 'F',       7,    '2016-01-09',   NULL),
            ( 3, 'Azul',     'M',       3,    '2016-01-11',  '2016-04-17'),
            ( 4, 'Victoire', 'M',       7,    '2016-01-11',  '2016-09-01'),
            ( 5, 'Nala',     'F',       1,    '2016-01-12',   NULL);



    -SELECT name, adoption_date FROM cats;
    A:  
        | name     | adoption_date            |
        | -------- | ------------------------ |
        | Mushi    | 2016-03-22T00:00:00.000Z |
        | Seashell |                          |
        | Azul     | 2016-04-17T00:00:00.000Z |
        | Victoire | 2016-09-01T00:00:00.000Z |
        | Nala     |                          |

    -SELECT name, age FROM cats;
    A:
        | name     | age |
        | -------- | --- |
        | Mushi    | 1   |
        | Seashell | 7   |
        | Azul     | 3   |
        | Victoire | 7   |
        | Nala     | 1   |

5)  From the cats table, write queries to select the following pieces of data.
    -Display all the information about all of the available cats.
    A:  select *
        from cats
        where adoption_date is NULL;

    -Display the name and sex of all cats who are 7 years old.
    A:  select name, gender
        from cats
        where age = 7;
    
    -Find all of the names of the cats, so you don’t choose duplicate names for new cats.
    A:  select name
        from cats;
    
6)  List each comparison operator and explain when you would use it. Include a real world example for each.
        >, use this when you want to select values greater than the value you put after the operator
        <, use this when you want to select values less than the value that you put to the right of the operator
        =, use this to select values equal to the value put after the operator
        >=, same as the greater than operator, but it also includes the value listed to the right of the operator
        <=, same as the greater than operator, but it also includes the value listed to the right of the operator
        != (<>), select a value that does NOT equal the value listed to the right of the operator
        LIKE, use this operator when you want to look up via a text value but only remember part of the text
        AND, use this when you want the results to fulfill two conditions
        OR, use this when you want the results to fulfill one of several conditions

7)  From the cats table, what data is returned from these queries?
        -SELECT name FROM cats WHERE gender = ‘F’;
        A:
        | name     |
        | -------- |
        | Seashell |
        | Nala     |

        -SELECT name FROM cats WHERE age <> 3;
        A:
        | name     |
        | -------- |
        | Mushi    |
        | Seashell |
        | Victoire |
        | Nala     |

        -SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
        A:
        | id  |
        | --- |
        | 3   |
        | 4   |